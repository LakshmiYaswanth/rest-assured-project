{"uid":"4c6c01c8f21860ff","name":"restAssuredWithMockServerTest()","fullName":"com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest","historyId":"4ecd10d7a046447ecd17b2af33ffbd95","time":{"start":1703537485243,"stop":1703537486652,"duration":1409},"description":"Assertion for single user response from mock test api","descriptionHtml":"<p>Assertion for single user response from mock test api</p>\n","status":"broken","statusMessage":"exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"d58f3c6d-e329-49ef-8839-f03051a37013\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation","statusTrace":"java.lang.IllegalArgumentException: exception while parsing [{\n  \"httpRequest\" : {\n    \"method\" : \"GET\",\n    \"path\" : \"/client\",\n    \"queryStringParameters\" : {\n      \"id\" : [ \"10001\" ]\n    }\n  },\n  \"httpResponse\" : {\n    \"statusCode\" : 200,\n    \"headers\" : {\n      \"content-type\" : [ \"application/json\" ]\n    },\n    \"body\" : \"{\\\"name\\\":\\\"Richard Thompson\\\"}\"\n  },\n  \"id\" : \"d58f3c6d-e329-49ef-8839-f03051a37013\",\n  \"priority\" : 0,\n  \"timeToLive\" : {\n    \"unlimited\" : true\n  },\n  \"times\" : {\n    \"unlimited\" : true\n  }\n}] for Expectation\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:205)\n\tat org.mockserver.serialization.ExpectationSerializer.deserializeArray(ExpectationSerializer.java:158)\n\tat org.mockserver.client.MockServerClient.upsert(MockServerClient.java:1517)\n\tat org.mockserver.client.ForwardChainExpectation.respond(ForwardChainExpectation.java:84)\n\tat com.bilgin.RestAssuredWithMockServerTest.setExpectation(RestAssuredWithMockServerTest.java:74)\n\tat com.bilgin.RestAssuredWithMockServerTest.restAssuredWithMockServerTest(RestAssuredWithMockServerTest.java:50)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:146)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeTest","time":{"start":1703537478125,"stop":1703537485219,"duration":7094},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bilgin.RestAssuredWithMockServerTest]/[method:restAssuredWithMockServerTest()]"},{"name":"owner","value":"Bilgin"},{"name":"feature","value":"RestAssured"},{"name":"host","value":"fv-az740-245"},{"name":"thread","value":"2294@fv-az740-245.ForkJoinPool-1-worker-3(15)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testClass","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"testMethod","value":"restAssuredWithMockServerTest"},{"name":"suite","value":"com.bilgin.RestAssuredWithMockServerTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"Bilgin","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"c4c42f6fe678af0c","reportUrl":"https://LakshmiYaswanth.github.io/rest-assured-project/11//#testresult/c4c42f6fe678af0c","status":"passed","time":{"start":1702500376162,"stop":1702500379853,"duration":3691}},{"uid":"c5426f4eecf59359","reportUrl":"https://LakshmiYaswanth.github.io/rest-assured-project/10//#testresult/c5426f4eecf59359","status":"passed","time":{"start":1702067632238,"stop":1702067634470,"duration":2232}},{"uid":"cc7c0b45fd0c1cb7","reportUrl":"https://LakshmiYaswanth.github.io/rest-assured-project/9//#testresult/cc7c0b45fd0c1cb7","status":"passed","time":{"start":1701291081654,"stop":1701291084777,"duration":3123}},{"uid":"7a0081e833e8aec1","reportUrl":"https://LakshmiYaswanth.github.io/rest-assured-project/3//#testresult/7a0081e833e8aec1","status":"passed","time":{"start":1700646620041,"stop":1700646623611,"duration":3570}},{"uid":"26a4ea1d68fa367b","reportUrl":"https://LakshmiYaswanth.github.io/rest-assured-project/8//#testresult/26a4ea1d68fa367b","status":"passed","time":{"start":1700646623935,"stop":1700646627078,"duration":3143}},{"uid":"d5de08bc2586c907","reportUrl":"https://LakshmiYaswanth.github.io/rest-assured-project/5//#testresult/d5de08bc2586c907","status":"passed","time":{"start":1700646629592,"stop":1700646632996,"duration":3404}}]},"tags":[]},"source":"4c6c01c8f21860ff.json","parameterValues":[]}